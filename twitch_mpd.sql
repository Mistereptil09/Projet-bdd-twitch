-- MySQL Script generated by MySQL Workbench
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema twitch
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `twitch` ;

-- -----------------------------------------------------
-- Schema twitch
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `twitch` DEFAULT CHARACTER SET utf8 ;
USE `twitch` ;

-- -----------------------------------------------------
-- Table `twitch`.`language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`language` (
  `idlanguage` INT NOT NULL,
  `language` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idlanguage`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`users` (
  `idusers` INT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `displayName` VARCHAR(45) NOT NULL,
  `bio` VARCHAR(300) NULL,
  `profileBanner` VARCHAR(45) NOT NULL,
  `smartnotification` TINYINT NOT NULL,
  `profilePicture` VARCHAR(45) NOT NULL,
  `videoPlayerBanner` VARCHAR(45) NULL,
  `profileAccentColor` CHAR(7) NOT NULL,
  `isLive` TINYINT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(45) NULL,
  `password` VARCHAR(45) NOT NULL,
  `language_idlanguage` INT NOT NULL,
  PRIMARY KEY (`idusers`, `language_idlanguage`),
  INDEX `fk_users_language1_idx` (`language_idlanguage` ASC) VISIBLE,
  CONSTRAINT `fk_users_language1`
    FOREIGN KEY (`language_idlanguage`)
    REFERENCES `twitch`.`language` (`idlanguage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`channelFeedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`channelFeedback` (
  `idchannelFeedback` INT NOT NULL,
  `feedback` VARCHAR(300) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idchannelFeedback`),
  INDEX `fk_channelFeedback_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_channelFeedback_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`categoryFeedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`categoryFeedback` (
  `idcategoryFeedback` INT NOT NULL,
  `feedback` VARCHAR(300) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idcategoryFeedback`),
  INDEX `fk_categoryFeedback_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_categoryFeedback_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`videoFeedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`videoFeedback` (
  `idvideoFeedback` INT NOT NULL,
  `feedback` VARCHAR(300) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idvideoFeedback`),
  INDEX `fk_videoFeedback_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_videoFeedback_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`privacy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`privacy` (
  `idprivacy` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `storiesClipSharing` TINYINT NOT NULL,
  `blockWhispers` TINYINT NOT NULL,
  `blockGifts` TINYINT NOT NULL,
  `hideBadge` TINYINT NOT NULL,
  `hideSub` TINYINT NOT NULL,
  `hideFounder` TINYINT NOT NULL,
  PRIMARY KEY (`idprivacy`, `users_idusers`),
  INDEX `fk_privacy_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_privacy_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`socialLinks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`socialLinks` (
  `idsocialLinks` INT NOT NULL,
  `linkTitle` VARCHAR(300) NOT NULL,
  `link` VARCHAR(300) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idsocialLinks`, `users_idusers`),
  INDEX `fk_socialLinks_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_socialLinks_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`earnings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`earnings` (
  `idearnings` INT NOT NULL,
  `donations` FLOAT NOT NULL,
  `subs` FLOAT NOT NULL,
  `partnership` FLOAT NOT NULL,
  `dateStart` DATETIME NOT NULL,
  `dateEnd` DATETIME NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idearnings`, `users_idusers`),
  INDEX `fk_earnings_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_earnings_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`subs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`subs` (
  `idsubs` INT NOT NULL,
  `prime` TINYINT NOT NULL,
  `dateStart` DATE NOT NULL,
  `tier` INT NOT NULL,
  `currency` VARCHAR(45) NOT NULL,
  `earnings_idearnings` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `users_idusers1` INT NOT NULL,
  PRIMARY KEY (`idsubs`, `earnings_idearnings`, `users_idusers`, `users_idusers1`),
  INDEX `fk_subs_earnings1_idx` (`earnings_idearnings` ASC) VISIBLE,
  INDEX `fk_subs_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_subs_users2_idx` (`users_idusers1` ASC) VISIBLE,
  CONSTRAINT `fk_subs_earnings1`
    FOREIGN KEY (`earnings_idearnings`)
    REFERENCES `twitch`.`earnings` (`idearnings`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subs_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subs_users2`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`highlights`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`highlights` (
  `idhighlights` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `video` VARCHAR(45) NOT NULL,
  `name`VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idhighlights`, `users_idusers`),
  INDEX `fk_highlights_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_highlights_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`recommendedhighlights`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`recommendedhighlights` (
  `highlights_idhighlights` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`highlights_idhighlights`, `users_idusers`),
  INDEX `fk_recommendedhighlights_highlights1_idx` (`highlights_idhighlights` ASC) VISIBLE,
  INDEX `fk_recommendedhighlights_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_recommendedhighlights_highlights1`
    FOREIGN KEY (`highlights_idhighlights`)
    REFERENCES `twitch`.`highlights` (`idhighlights`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_recommendedhighlights_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`categories` (
  `idcategories` INT NOT NULL,
  `parent_id` INT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idcategories`),
  INDEX `fk_categories_categories1_idx` (`parent_id` ASC) VISIBLE,
  CONSTRAINT `fk_categories_categories1`
    FOREIGN KEY (`parent_id`)
    REFERENCES `twitch`.`categories` (`idcategories`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`notificationPhone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`notificationPhone` (
  `idnotificationPhone` INT NOT NULL,
  `live` TINYINT NOT NULL,
  `streamTogether` TINYINT NOT NULL,
  `pastBroadcasts` TINYINT NOT NULL,
  `clips` TINYINT NOT NULL,
  `events` TINYINT NOT NULL,
  `chatMentions` TINYINT NOT NULL,
  `userFollow` TINYINT NOT NULL,
  `creator` TINYINT NOT NULL,
  `moderationNeeds` TINYINT NOT NULL,
  `giftsRewards` TINYINT NOT NULL,
  `subEmails` TINYINT NOT NULL,
  `streamStats` TINYINT NOT NULL,
  `developerUpdates` TINYINT NOT NULL,
  `recommendedLive` TINYINT NOT NULL,
  `subs` TINYINT NOT NULL,
  `marketing` TINYINT NOT NULL,
  `stories` TINYINT NOT NULL,
  `storiesReactions` TINYINT NOT NULL,
  `sharedClips` TINYINT NOT NULL,
  `users_idusers1` INT NOT NULL,
  PRIMARY KEY (`idnotificationPhone`, `users_idusers1`),
  INDEX `fk_notificationPhone_users2_idx` (`users_idusers1` ASC) VISIBLE,
  CONSTRAINT `fk_notificationPhone_users2`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`cookiePreferences`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`cookiePreferences` (
  `idcookiePreferences` INT NOT NULL,
  `operationalCookie` TINYINT NOT NULL,
  `analyticsCookie` TINYINT NOT NULL,
  `advertisingCookies` TINYINT NOT NULL,
  `users_idusers` INT NOT NULL,
  `amazon/Twitch` TINYINT NOT NULL,
  `comScore` TINYINT NOT NULL,
  `doubleVerify` TINYINT NOT NULL,
  `google` TINYINT NOT NULL,
  `integralAdScience` TINYINT NOT NULL,
  `nielsen` TINYINT NOT NULL,
  `salesforceDMP` TINYINT NOT NULL,
  `branch` TINYINT NOT NULL,
  PRIMARY KEY (`idcookiePreferences`, `users_idusers`),
  INDEX `fk_cookiePreferences_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_cookiePreferences_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`connections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`connections` (
  `idconnections` INT NOT NULL,
  `amazon` VARCHAR(45) NULL,
  `steam` VARCHAR(45) NULL,
  `youtube` VARCHAR(45) NULL,
  `tiktok` VARCHAR(45) NULL,
  `X` VARCHAR(45) NULL,
  `riotGames` VARCHAR(45) NULL,
  `ubisoft` VARCHAR(45) NULL,
  `streamlabs` VARCHAR(45) NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idconnections`, `users_idusers`),
  INDEX `fk_connections_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_connections_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`externalConnections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`externalConnections` (
  `idexternalConnections` INT NOT NULL,
  `nom` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idexternalConnections`, `users_idusers`),
  INDEX `fk_externalConnections_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_externalConnections_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`tags` (
  `idtags` INT NOT NULL,
  `nom` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`idtags`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`categories_has_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`categories_has_tags` (
  `categories_idcategories` INT NOT NULL,
  `tags_idtags` INT NOT NULL,
  PRIMARY KEY (`categories_idcategories`, `tags_idtags`),
  INDEX `fk_categories_has_tags_tags1_idx` (`tags_idtags` ASC) VISIBLE,
  INDEX `fk_categories_has_tags_categories1_idx` (`categories_idcategories` ASC) VISIBLE,
  CONSTRAINT `fk_categories_has_tags_categories1`
    FOREIGN KEY (`categories_idcategories`)
    REFERENCES `twitch`.`categories` (`idcategories`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_categories_has_tags_tags1`
    FOREIGN KEY (`tags_idtags`)
    REFERENCES `twitch`.`tags` (`idtags`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`streams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`streams` (
  `idstreams` INT NOT NULL,
  `title` VARCHAR(140) NOT NULL,
  `startTime` DATETIME NOT NULL,
  `endTime` DATETIME NULL,
  `description` VARCHAR(300) NOT NULL,
  `liveNotification` VARCHAR(140) NOT NULL,
  `drugs` TINYINT NOT NULL,
  `bets` TINYINT NOT NULL,
  `adultGames` TINYINT NOT NULL,
  `vulgarLanguage` TINYINT NOT NULL,
  `sexualThemes` TINYINT NOT NULL,
  `shockingContenent` TINYINT NOT NULL,
  `redifusion` TINYINT NOT NULL,
  `promotionalContent` TINYINT NOT NULL,
  `rebroadcast` TINYINT NOT NULL,
  `isLive` TINYINT NOT NULL,
  `users_idusers` INT NOT NULL,
  `language_idlanguage` INT NOT NULL,
  `streams_idstreams` INT NOT NULL,
  PRIMARY KEY (`idstreams`, `users_idusers`, `language_idlanguage`, `streams_idstreams`),
  INDEX `fk_streams_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_streams_language1_idx` (`language_idlanguage` ASC) VISIBLE,
  CONSTRAINT `fk_streams_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_streams_language1`
    FOREIGN KEY (`language_idlanguage`)
    REFERENCES `twitch`.`language` (`idlanguage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`uploads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`uploads` (
  `iduploads` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `video` VARCHAR(300) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `duration` FLOAT NOT NULL,
  PRIMARY KEY (`iduploads`, `users_idusers`),
  INDEX `fk_uploads_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_uploads_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`tags_has_streams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`tags_has_streams` (
  `tags_idtags` INT NOT NULL,
  `streams_idstreams` INT NOT NULL,
  PRIMARY KEY (`tags_idtags`, `streams_idstreams`),
  INDEX `fk_tags_has_streams_streams1_idx` (`streams_idstreams` ASC) VISIBLE,
  INDEX `fk_tags_has_streams_tags1_idx` (`tags_idtags` ASC) VISIBLE,
  CONSTRAINT `fk_tags_has_streams_tags1`
    FOREIGN KEY (`tags_idtags`)
    REFERENCES `twitch`.`tags` (`idtags`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_tags_has_streams_streams1`
    FOREIGN KEY (`streams_idstreams`)
    REFERENCES `twitch`.`streams` (`idstreams`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`schedule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`schedule` (
  `idschedule` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `title` VARCHAR(140) NOT NULL,
  `duration` FLOAT NOT NULL,
  `startTimeSchedule` DATETIME NOT NULL,
  `skipOnce` TINYINT NOT NULL,
  `monday` TINYINT NOT NULL,
  `tuesday` TINYINT NOT NULL,
  `wednesday` TINYINT NOT NULL,
  `thursday` TINYINT NOT NULL,
  `friday` TINYINT NOT NULL,
  `saturday` TINYINT NOT NULL,
  `sunday` TINYINT NOT NULL,
  `holidays` TINYINT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idschedule`, `users_idusers`),
  INDEX `fk_schedule_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_schedule_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`extensions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`extensions` (
  `idextensions` INT NOT NULL,
  `channels_idChaines` INT NOT NULL,
  `channels_users_idusers` INT NOT NULL,
  `extensionName` VARCHAR(140) NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idextensions`, `users_idusers`),
  INDEX `fk_extensions_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_extensions_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`panels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`panels` (
  `idpanels` INT NOT NULL,
  `panelTitle` VARCHAR(45) NULL,
  `imageLink` VARCHAR(140) NULL,
  `description` VARCHAR(300) NULL,
  `image` VARCHAR(140) NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idpanels`, `users_idusers`),
  INDEX `fk_panels_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_panels_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`emotes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`emotes` (
  `idemotes` INT NOT NULL,
  `img` VARCHAR(300) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idemotes`, `users_idusers`),
  INDEX `fk_emotes_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_emotes_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`chat` (
  `idchat` INT NOT NULL,
  `message` VARCHAR(300) NOT NULL,
  `users_idusers` INT NOT NULL,
  `emotes_idemotes` INT NOT NULL,
  PRIMARY KEY (`idchat`),
  INDEX `fk_chat_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_chat_emotes1_idx` (`emotes_idemotes` ASC) VISIBLE,
  CONSTRAINT `fk_chat_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_chat_emotes1`
    FOREIGN KEY (`emotes_idemotes`)
    REFERENCES `twitch`.`emotes` (`idemotes`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`chatStatistics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`chatStatistics` (
  `idChatStatistics` INT NOT NULL,
  `averageConversation` INT NOT NULL,
  `largestNumberMessages` INT NOT NULL,
  `smallestNumberMessages` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idChatStatistics`, `users_idusers`),
  INDEX `fk_chatStatistics_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_chatStatistics_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`viewersFromRaid`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`viewersFromRaid` (
  `idviewersFromRaid` INT NOT NULL,
  `average` INT NOT NULL,
  `largest` INT NOT NULL,
  `smallest` INT NOT NULL,
  `analytics_idanalytics` INT NOT NULL,
  `analytics_users_idusers` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idviewersFromRaid`, `analytics_idanalytics`, `analytics_users_idusers`, `users_idusers`),
  INDEX `fk_viewersFromRaid_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_viewersFromRaid_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`timeStreaming`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`timeStreaming` (
  `idtimeStreaming` INT NOT NULL,
  `average` INT NOT NULL,
  `smallest` INT NOT NULL,
  `largest` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idtimeStreaming`, `users_idusers`),
  INDEX `fk_timeStreaming_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_timeStreaming_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`follows`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`follows` (
  `idfollows` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `users_idusers1` INT NULL,
  `categories_idcategories` INT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`idfollows`, `users_idusers`),
  INDEX `fk_users_has_users_users6_idx` (`users_idusers1` ASC) VISIBLE,
  INDEX `fk_users_has_users_users5_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_follows_categories1_idx` (`categories_idcategories` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_users_users5`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_users_users6`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_follows_categories1`
    FOREIGN KEY (`categories_idcategories`)
    REFERENCES `twitch`.`categories` (`idcategories`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`newFollowers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`newFollowers` (
  `idnewFollowers` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `lastMonth` INT NOT NULL,
  `lastWeek` INT NOT NULL,
  `lastYear` INT NOT NULL,
  `follows_idfollows` INT NOT NULL,  -- Corrected data type to INT
  PRIMARY KEY (`idnewFollowers`, `users_idusers`, `follows_idfollows`),
  INDEX `fk_newFollowers_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_newFollowers_follows1_idx` (`follows_idfollows` ASC) VISIBLE,
  CONSTRAINT `fk_newFollowers_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_newFollowers_follows1`
    FOREIGN KEY (`follows_idfollows`)
    REFERENCES `twitch`.`follows` (`idfollows`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`adsViews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`adsViews` (
  `idadsViews` INT NOT NULL,
  `lastMonth` INT NOT NULL,
  `lastWeek` INT NOT NULL,
  `lastYear` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idadsViews`, `users_idusers`),
  INDEX `fk_adsConversions_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_adsConversions_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`numberFollowers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`numberFollowers` (
  `idnumberFollowers` INT NOT NULL,
  `largest` INT NOT NULL,
  `average` INT NOT NULL,
  `smallest` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idnumberFollowers`, `users_idusers`),
  INDEX `fk_numberFollowers_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_numberFollowers_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`subsStats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`subsStats` (
  `idsubsStats` INT NOT NULL,
  `largest` INT NOT NULL,
  `average` INT NOT NULL,
  `smallest` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idsubsStats`, `users_idusers`),
  INDEX `fk_subsStats_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_subsStats_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`users_has_uploads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`users_has_uploads` (
  `users_idusers` INT NOT NULL,
  `uploads_iduploads` INT NOT NULL,
  `uploads_users_idusers` INT NOT NULL,
  PRIMARY KEY (`users_idusers`, `uploads_iduploads`, `uploads_users_idusers`),
  INDEX `fk_users_has_uploads_uploads1_idx` (`uploads_iduploads` ASC, `uploads_users_idusers` ASC) VISIBLE,
  INDEX `fk_users_has_uploads_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_uploads_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_uploads_uploads1`
    FOREIGN KEY (`uploads_iduploads` , `uploads_users_idusers`)
    REFERENCES `twitch`.`uploads` (`iduploads` , `users_idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`users_has_streams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`users_has_streams` (
  `users_idusers` INT NOT NULL,
  `streams_idstreams` INT NOT NULL,
  `streams_users_idusers` INT NOT NULL,
  PRIMARY KEY (`users_idusers`, `streams_idstreams`, `streams_users_idusers`),
  INDEX `fk_users_has_streams_streams1_idx` (`streams_idstreams` ASC, `streams_users_idusers` ASC) VISIBLE,
  INDEX `fk_users_has_streams_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_streams_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_streams_streams1`
    FOREIGN KEY (`streams_idstreams` , `streams_users_idusers`)
    REFERENCES `twitch`.`streams` (`idstreams` , `users_idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`users_has_highlights`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`users_has_highlights` (
  `users_idusers` INT NOT NULL,
  `highlights_idhighlights` INT NOT NULL,
  `highlights_users_idusers` INT NOT NULL,
  PRIMARY KEY (`users_idusers`, `highlights_idhighlights`, `highlights_users_idusers`),
  INDEX `fk_users_has_highlights_highlights1_idx` (`highlights_idhighlights` ASC, `highlights_users_idusers` ASC) VISIBLE,
  INDEX `fk_users_has_highlights_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_highlights_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_highlights_highlights1`
    FOREIGN KEY (`highlights_idhighlights` , `highlights_users_idusers`)
    REFERENCES `twitch`.`highlights` (`idhighlights` , `users_idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`poll`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`poll` (
  `idpoll` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `chat_idchat` INT NOT NULL,
  PRIMARY KEY (`idpoll`, `chat_idchat`),
  INDEX `fk_poll_chat1_idx` (`chat_idchat` ASC) VISIBLE,
  CONSTRAINT `fk_poll_chat1`
    FOREIGN KEY (`chat_idchat`)
    REFERENCES `twitch`.`chat` (`idchat`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`answers` (
  `idanswers` INT NOT NULL,
  `answers` VARCHAR(45) NOT NULL,
  `votes` INT NOT NULL,
  `poll_idpoll` INT NOT NULL,
  PRIMARY KEY (`idanswers`, `poll_idpoll`),
  INDEX `fk_answers_poll1_idx` (`poll_idpoll` ASC) VISIBLE,
  CONSTRAINT `fk_answers_poll1`
    FOREIGN KEY (`poll_idpoll`)
    REFERENCES `twitch`.`poll` (`idpoll`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`badges`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`badges` (
  `idbadges` INT NOT NULL,
  `img` VARCHAR(45) NOT NULL,
  `subs_idsubs` INT NOT NULL,
  PRIMARY KEY (`idbadges`),
  INDEX `fk_badges_subs1_idx` (`subs_idsubs` ASC) VISIBLE,
  CONSTRAINT `fk_badges_subs1`
    FOREIGN KEY (`subs_idsubs`)
    REFERENCES `twitch`.`subs` (`idsubs`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`users_has_badges`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`users_has_badges` (
  `users_idusers` INT NOT NULL,
  `badges_idbadges` INT NOT NULL,
  PRIMARY KEY (`users_idusers`, `badges_idbadges`),
  INDEX `fk_users_has_badges_badges1_idx` (`badges_idbadges` ASC) VISIBLE,
  INDEX `fk_users_has_badges_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_badges_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_badges_badges1`
    FOREIGN KEY (`badges_idbadges`)
    REFERENCES `twitch`.`badges` (`idbadges`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`collection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`collection` (
  `idcollection` INT NOT NULL,
  `streams_idstreams` INT NOT NULL,
  `uploads_iduploads` INT NOT NULL,
  `highlights_idhighlights` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `img` VARCHAR(45) NULL,
  PRIMARY KEY (`idcollection`, `streams_idstreams`, `uploads_iduploads`, `highlights_idhighlights`, `users_idusers`),
  INDEX `fk_collection_streams1_idx` (`streams_idstreams` ASC) VISIBLE,
  INDEX `fk_collection_uploads1_idx` (`uploads_iduploads` ASC) VISIBLE,
  INDEX `fk_collection_highlights1_idx` (`highlights_idhighlights` ASC) VISIBLE,
  INDEX `fk_collection_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_collection_streams1`
    FOREIGN KEY (`streams_idstreams`)
    REFERENCES `twitch`.`streams` (`idstreams`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_collection_uploads1`
    FOREIGN KEY (`uploads_iduploads`)
    REFERENCES `twitch`.`uploads` (`iduploads`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_collection_highlights1`
    FOREIGN KEY (`highlights_idhighlights`)
    REFERENCES `twitch`.`highlights` (`idhighlights`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_collection_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`reaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`reaction` (
  `idreaction` INT NOT NULL,
  `reaction` VARCHAR(45) NOT NULL,
  `img` VARCHAR(45) NOT NULL,
  `date` DATETIME NOT NULL,
  `streams_idstreams` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idreaction`, `streams_idstreams`, `users_idusers`),
  INDEX `fk_reaction_streams1_idx` (`streams_idstreams` ASC) VISIBLE,
  INDEX `fk_reaction_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_reaction_streams1`
    FOREIGN KEY (`streams_idstreams`)
    REFERENCES `twitch`.`streams` (`idstreams`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reaction_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`hypechat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`hypechat` (
  `idhypechat` INT NOT NULL,
  `amount` FLOAT NOT NULL,
  `message` VARCHAR(300) NOT NULL,
  `currency` VARCHAR(45) NOT NULL,
  `earnings_idearnings` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idhypechat`, `earnings_idearnings`, `users_idusers`),
  INDEX `fk_donations_earnings1_idx` (`earnings_idearnings` ASC) VISIBLE,
  INDEX `fk_donations_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_donations_earnings1`
    FOREIGN KEY (`earnings_idearnings`)
    REFERENCES `twitch`.`earnings` (`idearnings`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_donations_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`adsIncome`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`adsIncome` (
  `idadsIncome` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `earnings_idearnings` INT NOT NULL,
  `amount` FLOAT NOT NULL,
  PRIMARY KEY (`idadsIncome`, `users_idusers`, `earnings_idearnings`),
  INDEX `fk_adsIncome_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_adsIncome_earnings1_idx` (`earnings_idearnings` ASC) VISIBLE,
  CONSTRAINT `fk_adsIncome_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_adsIncome_earnings1`
    FOREIGN KEY (`earnings_idearnings`)
    REFERENCES `twitch`.`earnings` (`idearnings`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`ads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`ads` (
  `idads` INT NOT NULL,
  `adsIncome_idadsIncome` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `url` VARCHAR(45) NOT NULL,
  `duration` DATETIME NOT NULL,
  PRIMARY KEY (`idads`, `adsIncome_idadsIncome`, `users_idusers`),
  INDEX `fk_ads_adsIncome1_idx` (`adsIncome_idadsIncome` ASC) VISIBLE,
  INDEX `fk_ads_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_ads_adsIncome1`
    FOREIGN KEY (`adsIncome_idadsIncome`)
    REFERENCES `twitch`.`adsIncome` (`idadsIncome`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ads_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`directMessages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`directMessages` (
  `iddirectMessages` INT NOT NULL,
  `message` VARCHAR(300) NOT NULL,
  `users_idusers` INT NOT NULL,
  `users_idusers1` INT NOT NULL,
  PRIMARY KEY (`iddirectMessages`, `users_idusers`, `users_idusers1`),
  INDEX `fk_directMessages_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_directMessages_users2_idx` (`users_idusers1` ASC) VISIBLE,
  CONSTRAINT `fk_directMessages_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_directMessages_users2`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`report` (
  `idreport` INT NOT NULL,
  `problem` VARCHAR(45) NOT NULL,
  `reason` VARCHAR(45) NOT NULL,
  `description` VARCHAR(2000) NOT NULL,
  `users_idusers` INT NOT NULL,
  `users_idusers1` INT NOT NULL,
  PRIMARY KEY (`idreport`, `users_idusers`, `users_idusers1`),
  INDEX `fk_report_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_report_users2_idx` (`users_idusers1` ASC) VISIBLE,
  CONSTRAINT `fk_report_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_report_users2`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`chatBan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`chatBan` (
  `idchatBan` INT NOT NULL,
  `start` DATETIME NOT NULL,
  `reason` VARCHAR(2000) NOT NULL,
  `end` DATETIME NOT NULL,
  `users_idusers` INT NOT NULL,
  `chat_idchat` INT NOT NULL,
  PRIMARY KEY (`idchatBan`, `users_idusers`, `chat_idchat`),
  INDEX `fk_chatBan_chat1_idx` (`chat_idchat` ASC) VISIBLE,
  INDEX `fk_chatBan_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_chatBan_chat1`
    FOREIGN KEY (`chat_idchat`)
    REFERENCES `twitch`.`chat` (`idchat`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_chatBan_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`twitchBan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`twitchBan` (
  `idtwitchBan` INT NOT NULL,
  `start` DATETIME NOT NULL,
  `end` DATETIME NOT NULL,
  `reason` VARCHAR(2000) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idtwitchBan`, `users_idusers`),
  INDEX `fk_twitchBan_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_twitchBan_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`bits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`bits` (
  `idbits` INT NOT NULL,
  `amount` FLOAT NOT NULL,
  `conversionCost` FLOAT NOT NULL,
  `currency` VARCHAR(45) NOT NULL,
  `users_idusers` INT NOT NULL,
  `chat_idchat` INT NOT NULL,
  PRIMARY KEY (`idbits`, `users_idusers`, `chat_idchat`),
  INDEX `fk_bits_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_bits_chat1_idx` (`chat_idchat` ASC) VISIBLE,
  CONSTRAINT `fk_bits_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_bits_chat1`
    FOREIGN KEY (`chat_idchat`)
    REFERENCES `twitch`.`chat` (`idchat`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`viewerHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`viewerHistory` (
  `idviewerHistory` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `streams_idstreams` INT NOT NULL,
  `highlights_idhighlights` INT NOT NULL,
  `uploads_iduploads` INT NOT NULL,
  PRIMARY KEY (`idviewerHistory`, `users_idusers`, `streams_idstreams`, `highlights_idhighlights`, `uploads_iduploads`),
  INDEX `fk_viewerHistory_users1_idx` (`users_idusers` ASC) VISIBLE,
  INDEX `fk_viewerHistory_streams1_idx` (`streams_idstreams` ASC) VISIBLE,
  INDEX `fk_viewerHistory_highlights1_idx` (`highlights_idhighlights` ASC) VISIBLE,
  INDEX `fk_viewerHistory_uploads1_idx` (`uploads_iduploads` ASC) VISIBLE,
  CONSTRAINT `fk_viewerHistory_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_viewerHistory_streams1`
    FOREIGN KEY (`streams_idstreams`)
    REFERENCES `twitch`.`streams` (`idstreams`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_viewerHistory_highlights1`
    FOREIGN KEY (`highlights_idhighlights`)
    REFERENCES `twitch`.`highlights` (`idhighlights`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_viewerHistory_uploads1`
    FOREIGN KEY (`uploads_iduploads`)
    REFERENCES `twitch`.`uploads` (`iduploads`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`drops`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`drops` (
  `iddrops` INT NOT NULL,
  `externalConnections_idexternalConnections` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `partner` VARCHAR(45) NOT NULL,
  `startDate` DATETIME NOT NULL,
  `endDate` DATETIME NOT NULL,
  PRIMARY KEY (`iddrops`, `externalConnections_idexternalConnections`, `users_idusers`),
  INDEX `fk_drops_externalConnections1_idx` (`externalConnections_idexternalConnections` ASC) VISIBLE,
  INDEX `fk_drops_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_drops_externalConnections1`
    FOREIGN KEY (`externalConnections_idexternalConnections`)
    REFERENCES `twitch`.`externalConnections` (`idexternalConnections`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_drops_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`rewards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`rewards` (
  `idrewards` INT NOT NULL,
  `reward` VARCHAR(45) NOT NULL,
  `img` VARCHAR(45) NOT NULL,
  `viewTime` TIME NOT NULL,
  `streams_idstreams` INT NOT NULL,
  `categories_idcategories` INT NOT NULL,
  `drops_iddrops` INT NOT NULL,
  PRIMARY KEY (`idrewards`, `streams_idstreams`, `categories_idcategories`, `drops_iddrops`),
  INDEX `fk_rewards_streams1_idx` (`streams_idstreams` ASC) VISIBLE,
  INDEX `fk_rewards_categories1_idx` (`categories_idcategories` ASC) VISIBLE,
  INDEX `fk_rewards_drops1_idx` (`drops_iddrops` ASC) VISIBLE,
  CONSTRAINT `fk_rewards_streams1`
    FOREIGN KEY (`streams_idstreams`)
    REFERENCES `twitch`.`streams` (`idstreams`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rewards_categories1`
    FOREIGN KEY (`categories_idcategories`)
    REFERENCES `twitch`.`categories` (`idcategories`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rewards_drops1`
    FOREIGN KEY (`drops_iddrops`)
    REFERENCES `twitch`.`drops` (`iddrops`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`connectionHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`connectionHistory` (
  `idconnectionHistory` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `systemConnected` VARCHAR(45) NOT NULL,
  `localisation` VARCHAR(45) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idconnectionHistory`, `users_idusers`),
  INDEX `fk_connectionHistory_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_connectionHistory_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`notificationTwitch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`notificationTwitch` (
  `idnotificationTwitch` INT NOT NULL,
  `live` TINYINT NOT NULL,
  `streamTogether` TINYINT NOT NULL,
  `pastBroadcasts` TINYINT NOT NULL,
  `clips` TINYINT NOT NULL,
  `events` TINYINT NOT NULL,
  `chatMentions` TINYINT NOT NULL,
  `userFollow` TINYINT NOT NULL,
  `creator` TINYINT NOT NULL,
  `moderationNeeds` TINYINT NOT NULL,
  `giftsRewards` TINYINT NOT NULL,
  `subEmails` TINYINT NOT NULL,
  `streamStats` TINYINT NOT NULL,
  `developerUpdates` TINYINT NOT NULL,
  `recommendedLive` TINYINT NOT NULL,
  `subs` TINYINT NOT NULL,
  `marketing` TINYINT NOT NULL,
  `stories` TINYINT NOT NULL,
  `storiesReactions` TINYINT NOT NULL,
  `sharedClips` TINYINT NOT NULL,
  `users_idusers1` INT NOT NULL,
  PRIMARY KEY (`idnotificationTwitch`, `users_idusers1`),
  INDEX `fk_notificationPhone_users2_idx` (`users_idusers1` ASC) VISIBLE,
  CONSTRAINT `fk_notificationPhone_users20`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`notificationEmail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`notificationEmail` (
  `idnotificationEmail` INT NOT NULL,
  `live` TINYINT NOT NULL,
  `streamTogether` TINYINT NOT NULL,
  `pastBroadcasts` TINYINT NOT NULL,
  `clips` TINYINT NOT NULL,
  `events` TINYINT NOT NULL,
  `chatMentions` TINYINT NOT NULL,
  `userFollow` TINYINT NOT NULL,
  `creator` TINYINT NOT NULL,
  `moderationNeeds` TINYINT NOT NULL,
  `giftsRewards` TINYINT NOT NULL,
  `subEmails` TINYINT NOT NULL,
  `streamStats` TINYINT NOT NULL,
  `developerUpdates` TINYINT NOT NULL,
  `recommendedLive` TINYINT NOT NULL,
  `subs` TINYINT NOT NULL,
  `marketing` TINYINT NOT NULL,
  `stories` TINYINT NOT NULL,
  `storiesReactions` TINYINT NOT NULL,
  `sharedClips` TINYINT NOT NULL,
  `users_idusers1` INT NOT NULL,
  PRIMARY KEY (`idnotificationEmail`, `users_idusers1`),
  INDEX `fk_notificationPhone_users2_idx` (`users_idusers1` ASC) VISIBLE,
  CONSTRAINT `fk_notificationPhone_users21`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`recommendedChannels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`recommendedChannels` (
  `users_idusers` INT NOT NULL,
  `users_idusers1` INT NOT NULL,
  PRIMARY KEY (`users_idusers`, `users_idusers1`),
  INDEX `fk_users_has_users_users2_idx` (`users_idusers1` ASC) VISIBLE,
  INDEX `fk_users_has_users_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_users_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_users_users2`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`blockedUsers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`blockedUsers` (
  `idblockedUsers` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `users_idusers1` INT NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`idblockedUsers`, `users_idusers`, `users_idusers1`),
  INDEX `fk_users_has_users_users4_idx` (`users_idusers1` ASC) VISIBLE,
  INDEX `fk_users_has_users_users3_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_users_users3`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_users_users4`
    FOREIGN KEY (`users_idusers1`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`roles` (
  `idroles` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  `chat_idchat` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idroles`),
  INDEX `fk_users_has_chat_chat1_idx` (`chat_idchat` ASC) VISIBLE,
  INDEX `fk_users_has_chat_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_chat_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_chat_chat1`
    FOREIGN KEY (`chat_idchat`)
    REFERENCES `twitch`.`chat` (`idchat`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`twitchPartners`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`twitchPartners` (
  `idtwitchPartners` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idtwitchPartners`, `users_idusers`),
  INDEX `fk_twitchPartners_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_twitchPartners_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitch`.`numberTwitchPartners`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitch`.`numberTwitchPartners` (
  `idnumberTwitchPartners` INT NOT NULL,
  `lastMonth` INT NOT NULL,
  `lastYear` INT NOT NULL,
  `lastWeek` INT NOT NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idnumberTwitchPartners`, `users_idusers`),
  INDEX `fk_numberTwitchPartners_users1_idx` (`users_idusers` ASC) VISIBLE,
  CONSTRAINT `fk_numberTwitchPartners_users1`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `twitch`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

REVOKE ALL PRIVILEGES ON twitch.* FROM 'admin'@'localhost';
DROP USER 'admin'@'localhost';

CREATE USER 'admin'@'localhost' IDENTIFIED BY '1234';
GRANT INSERT, DELETE, SELECT, UPDATE ON twitch.* TO 'admin'@'localhost';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
